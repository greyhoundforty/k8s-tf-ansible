---
- name: Configure control plane nodes
  gather_facts: true
  hosts: controllers
  vars_files:
    - vars/cluster-vars.yml
  vars:
    - ETCD_URL: "https://github.com/etcd-io/etcd/releases/download"
    - ETCD_VERSION: "v3.5.10"
    - FILES_PATH: "../files"
    - CA_PATH: "{{ FILES_PATH }}/certificate_authority"
    - GENERATED_PATH: "{{ CA_PATH }}/generated"
    - TEMPLATES_PATH: "../templates"
    - BOOTSTRAP_PATH: "/root/bootstrap"
  tasks:
    - name: "Download etcd binary"
      ansible.builtin.get_url:
        url: "{{ ETCD_URL }}/{{ ETCD_VERSION }}/etcd-{{ ETCD_VERSION }}-linux-amd64.tar.gz"
        dest: /tmp/etcd-{{ ETCD_VERSION }}-linux-amd64.tar.gz
        mode: "0644"

    - name: Unarchive etcd to tmp
      ansible.builtin.unarchive:
        src: "/tmp/etcd-{{ ETCD_VERSION }}-linux-amd64.tar.gz"
        dest: "/tmp/"
        remote_src: true

    - name: "Copy etcd binaries to path"
      ansible.builtin.copy:
        src: "/tmp/etcd-{{ ETCD_VERSION }}-linux-amd64/{{ etcd_file }}"
        dest: /usr/local/bin/{{ etcd_file }}
        owner: root
        group: root
        mode: "0755"
        remote_src: true
      loop:
        - etcd
        - etcdctl
        - etcdutl
      loop_control:
        loop_var: etcd_file

    - name: "Template the etcd systemd service file"
      ansible.builtin.template:
        src: "{{ TEMPLATES_PATH }}/etcd.service.j2"
        dest: /etc/systemd/system/etcd.service
        trim_blocks: true
        mode: "0644"

    - name: "Copy required certificate authority files and keys for etcd"
      ansible.builtin.copy:
        src: "{{ GENERATED_PATH }}/{{ cert_file }}"
        dest: /etc/etcd/{{ cert_file }}
        owner: root
        group: root
        mode: "0600"
      loop:
        - ca.pem
        - kubernetes-key.pem
        - kubernetes.pem
      loop_control:
        loop_var: cert_file

    - name: "Set the ETCDCTL_API environment variable to 3"
      ansible.builtin.lineinfile:
        path: /etc/profile
        line: export ETCDCTL_API=3
        state: present
        create: true
        insertafter: EOF
        mode: "0644"

    - name: "Reload systemd daemon and start etcd service"
      ansible.builtin.systemd:
        state: started
        enabled: true
        daemon_reload: true
        name: etcd

    - name: "Get etcd service status"
      ansible.builtin.service:
        name: etcd
        state: started
        enabled: true
      register: etcd_status
      until: etcd_status is success
      delay: 10
      retries: 3
      changed_when: etcd_status.status == 'started'

    - name: "Check etcd member status on first controller"
      ansible.builtin.command: |
        "/usr/local/bin/etcdctl member list --endpoints=https://127.0.0.1:2379 \
        --cacert=/etc/etcd/ca.pem --cert=/etc/etcd/kubernetes.pem \
        --key=/etc/etcd/kubernetes-key.pem"
      register: etcd_members
      when: inventory_hostname in groups['controllers'][0]
      changed_when: false

    - name: "Verify etcd member status"
      ansible.builtin.assert:
        that:
          - "'started' in etcd_members.stdout"
        fail_msg: "Etcd member status does not contain 'started'"
        success_msg: "Etcd member status looks good"
