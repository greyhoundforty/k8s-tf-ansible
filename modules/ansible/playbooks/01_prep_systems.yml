---
- name: "Update and prep control plane and worker nodes for Kubernetes deployment"
  gather_facts: true
  hosts: all
  vars_files:
    - vars/cluster-vars.yml
  vars:
    - FILES_PATH: "../files"
    - CA_PATH: "{{ FILES_PATH }}/certificate_authority"
    - GENERATED_PATH: "{{ CA_PATH }}/generated"
    - TEMPLATES_PATH: "../templates"
    - BOOTSTRAP_PATH: "/root/bootstrap"
    - K8S_VERSION: "v1.27.6"
  tasks:
    - name: "Update apt packages on DEB based systems"
      ansible.builtin.apt:
        upgrade: true
        update_cache: true
      register: apt_status
      until: apt_status is success
      delay: 10
      retries: 10
      tags:
        - system_update
      when: ansible_facts['os_family'] == "Debian"

    - name: "Enumerate all controllers and workers within the hosts file"
      ansible.builtin.blockinfile:
        dest: /etc/hosts
        marker: "# {mark} ANSIBLE MANAGED: kubernetes hosts"
        content: |
          {% for host in groups['workers'] %}
          {{ hostvars[host].ansible_default_ipv4.address }} {{ hostvars[host].ansible_hostname }}
          {% endfor %}
          {% for host in groups['controllers'] %}
          {{ hostvars[host].ansible_default_ipv4.address }} {{ hostvars[host].ansible_hostname }}
          {% endfor %}
      register: hosts_file
      tags:
        - configuration
      changed_when: hosts_file.changed

    - name: "Install required apt packages for kubernetes worker nodes"
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop:
        - socat
        - conntrack
        - ipset
      register: pkgs_installed
      tags:
        - packages
      changed_when: pkgs_installed.changed
      when: inventory_hostname in groups['workers']

    - name: "Create required kubernetes directories on worker nodes"
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: "0700"
      loop:
        - /etc/cni/net.d
        - /opt/cni/bin
        - /var/lib/kubelet
        - /var/lib/kube-proxy
        - /var/lib/kubernetes/opt
        - /var/run/kubernetes
        - /root/containerd
        - /etc/containerd

      register: worker_directories_created
      changed_when: worker_directories_created.changed
      when: inventory_hostname in groups['workers']

    - name: "Create etcd and kubernetes directories on control plane nodes"
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: "0700"
      loop:
        - /etc/etcd
        - /var/lib/etcd
        - /var/lib/kubernetes/
        - /etc/kubernetes/config
      register: controller_directories_created
      changed_when: controller_directories_created.changed
      when: inventory_hostname in groups['controllers']

    - name: "Disable SWAP since kubernetes can't work with swap enabled (1/2)"
      ansible.builtin.shell: |
        swapoff -a
      register: swap_status
      changed_when: swap_status.rc != 0
      when: inventory_hostname in groups['workers']

    - name: "Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)"
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'
      register: swap_fstab
      changed_when: swap_fstab.rc != 0
      when: inventory_hostname in groups['workers']

    - name: "Reboot the all worker and control nodes after and updating and system prep"
      ansible.builtin.reboot:
        reboot_timeout: 120
        msg: "Reboot initiated by Ansible for kubernetes prep"
      tags:
        - reboot
      when: inventory_hostname in groups['workers'] or inventory_hostname in groups['controllers']
