---
- name: "Configure kubernetes components on control plane nodes"
  gather_facts: true
  hosts: controllers
  vars_files:
    - vars/cluster-vars.yml
  vars:
    - K8S_VERSION: "v1.27.6"
    - FILES_PATH: "../files"
    - CONTROL_FILES_PATH: ".{{ FILES_PATH }}/control_plane"
    - CA_PATH: "{{ FILES_PATH }}/certificate_authority"
    - GENERATED_PATH: "{{ CA_PATH }}/generated"
    - TEMPLATES_PATH: "../templates"
    - BOOTSTRAP_PATH: "/root/bootstrap"
  tasks:
    - name: "Download kubernetes binaries"
      ansible.builtin.get_url:
        url: https://storage.googleapis.com/kubernetes-release/release/{{ K8S_VERSION }}/bin/linux/amd64/{{ binary_file }}
        dest: /usr/local/bin/{{ binary_file }}
        owner: root
        group: root
        mode: "0755"
      loop:
        - kube-apiserver
        - kube-controller-manager
        - kube-scheduler
        - kubectl
      loop_control:
        loop_var: binary_file

    - name: "Copy CA, Kubernetes, and Service Account certificates and keys to /var/lib/kubernetes/"
      ansible.builtin.copy:
        src: "{{ GENERATED_PATH }}/{{ cert_file }}"
        dest: /var/lib/kubernetes/{{ cert_file }}
        owner: root
        group: root
        mode: "0600"
      loop:
        - ca.pem
        - ca-key.pem
        - kubernetes-key.pem
        - kubernetes.pem
        - service-account-key.pem
        - service-account.pem
        - encryption-config.yaml
        - kube-controller-manager.kubeconfig
        - kube-scheduler.kubeconfig
      loop_control:
        loop_var: cert_file
      register: copy_control_kconfigs
      changed_when: copy_control_kconfigs.changed

    - name: "Template kube-apiserver systemd unit file"
      ansible.builtin.template:
        src: "{{ TEMPLATES_PATH }}/kube-apiserver.service.j2"
        dest: /etc/systemd/system/kube-apiserver.service
        trim_blocks: true
        mode: "0644"

    - name: "Template the kube-controller-manager service file"
      ansible.builtin.template:
        src: "{{ TEMPLATES_PATH }}/kube-controller-manager.j2"
        dest: /etc/systemd/system/kube-controller-manager.service
        owner: root
        group: root
        mode: "0644"

    - name: "Copy kube-scheduler configuration file"
      ansible.builtin.copy:
        src: "{{ CONTROL_FILES_PATH }}/kube-scheduler.yaml"
        dest: /etc/kubernetes/config/kube-scheduler.yaml
        owner: root
        group: root
        mode: "0644"

    - name: "Copy kube-scheduler systemd unit file"
      ansible.builtin.copy:
        src: "{{ CONTROL_FILES_PATH }}/kube-scheduler.service"
        dest: /etc/systemd/system/kube-scheduler.service
        owner: root
        group: root
        mode: "0644"

    - name: "Copy RBAC configuration files"
      ansible.builtin.copy:
        src: "{{ CONTROL_FILES_PATH }}/rbac-config.yaml"
        dest: /root/rbac-config.yaml
        owner: root
        group: root
        mode: "0600"

    - name: "Copy Admin kubeconfig files and keys"
      ansible.builtin.copy:
        src: "{{ GENERATED_PATH }}/{{ admin_file }}"
        dest: /root/{{ admin_file }}
        owner: root
        group: root
        mode: "0600"
      loop:
        - admin.kubeconfig
        - admin-key.pem
        - admin.pem
      loop_control:
        loop_var: admin_file

    - name: "Reload systemd daemon and start kube-apiserver service"
      ansible.builtin.systemd:
        state: started
        enabled: true
        daemon_reload: true
        name: kube-apiserver
      register: kube_apiserver_status

    - name: "Enable and start kube-scheduler service"
      ansible.builtin.systemd:
        state: started
        enabled: true
        name: kube-scheduler
      register: kube_scheduler_status
      changed_when: kube_scheduler_status.changed

    - name: "Enable and start kube-controller-manager service"
      ansible.builtin.systemd:
        state: started
        enabled: true
        name: kube-controller-manager
      register: kube_controller_status
      changed_when: kube_controller_status.changed

    - name: "Create RBAC configuration"
      ansible.builtin.command: "kubectl create --kubeconfig {{ BOOTSTRAP_PATH }}/admin.kubeconfig -f {{ BOOTSTRAP_PATH }}/rbac-config.yaml"
      register: rbac_status
      changed_when: rbac_status.rc == 0
      when: inventory_hostname in groups['controllers'][0]

